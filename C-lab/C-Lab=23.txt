MCQs
----

[while-for -loop]
------------------

Q-1 :-
------
What will be the output of the following code?
-----------------------------------------------

#include <stdio.h>
int main() {
    for (int i = 0; i < 3; i++)
        for (int j = 0; j < 2; j++);
    printf("Hello");
    return 0;
}

A) Hello Hello
B) Hello
C) Compilation Error
D) Infinite Loop

Answer: B) Hello

Explanation: The inner loop (for (int j = 0; j < 2; j++);) has an empty body due to the semicolon ;. It completes execution for each iteration of the outer loop without affecting the System.out.println.

Q-2 :-
------
How many times will "C Programming" be printed?
-----------------------------------------------
#include <stdio.h>
int main() {
    int i = 1;
    while (i <= 5)
        while (i < 3) {
            printf("C Programming\n");
            i++;
        }
    return 0;
}

A) 0
B) 1
C) 2
D) Infinite

Answer: C) 2
-------
Explanation: The inner loop runs while i < 3. When i = 1, it prints once and increments i to 2. It prints again for i = 2 and increments i to 3, exiting the loop.

Q-3 :-
------
What happens with the following code?
-------------------------------------
#include <stdio.h>
int main() {
    int x = 1;
    while (x) {
        printf("Running\n");
    }
    return 0;
}

A) Running is printed once.
B) Running is printed infinitely.
C) Compilation Error.
D) Runtime Error.

Answer: B) Running is printed infinitely.
-------
Explanation: In C, any non-zero value is considered true. Since x is always 1, the loop runs infinitely.and also break is not provided thats why the loop runs infinitely.

Q-4 :-
------

What is the output?
-------------------
#include <stdio.h>
int main() {
    for (int i = 0; ; i++) {
        printf("%d ", i);
        if (i == 2) break;
    }
    return 0;
}

A) 0 1 2
B) Infinite loop
C) 0 1 2 3
D) Compilation Error

Answer: A) 0 1 2
-------
Explanation: The for loop has no condition (; ;), so it runs indefinitely until explicitly terminated by the break statement.

Q-5 :-
------

Which of these is valid?
A) while (1);
B) while (0) { }
C) for (;;) { }
D) All of the above

Answer: D) All of the above
Explanation: while (1); and for (;;) are valid infinite loops. while (0) is valid but doesn’t execute its body because the condition is false.

Q-7 :-
------

What does this code print?
--------------------------
#include <stdio.h>
int main() {
    int i = 0, sum = 0;
    for (; i < 3; sum += i++);
    printf("%d\n", sum);
    return 0;
}

A) 3
B) 6
C) 0
D) Compilation Error

Answer: A) 3
-------
Explanation:
------------
The for loop runs as long as the condition i < 3 is true.

In each iteration:

sum is incremented by the value of i (before the increment of i due to i++).
Then i is incremented by 1.
Iterations are as follows:

1st iteration: i = 0, sum = sum + i → sum = 0, i++ → i = 1.
2nd iteration: i = 1, sum = sum + i → sum = 1, i++ → i = 2.
3rd iteration: i = 2, sum = sum + i → sum = 3, i++ → i = 3.

When i = 3, the loop condition i < 3 becomes false, and the loop exits.

Q-8 :-
------

What will happen?
-----------------
#include <stdio.h>
int main() {
    while (1)
        while (0)
            printf("Hello");
    return 0;
}

A) Compilation Error.
B) No output.
C) Infinite "Hello".
D) Runtime Error.

Answer: B) No output.
-------
Explanation: The while (0) loop never runs because the condition is false, so "Hello" is not printed.


Q-9 :-
------

What is printed?
----------------
#include <stdio.h>
int main() {
    int x = 5;
    while (x-- > 0);
    printf("%d\n", x);
    return 0;
}

A) 0
B) -1
C) 5
D) Compilation Error

Answer: B) -1
-------
Explanation: The while loop decrements x until x > 0 becomes false. After the loop, x is -1.

Q-10 :-
------

What is printed?
----------------
#include <stdio.h>
int main() {
    int i = 0, j = 5;
    while (i++ < --j);
    printf("%d %d\n", i, j);
    return 0;
}

A) 3 2
B) 4 1
C) 5 0
D) Compilation Error

Answer: A) 3 2
-------
Explanation:
------------
Initialization:
----------------
i = 0, j = 5.

Condition and Updates in the while Loop:
----------------------------------------
The condition is i++ < --j. This involves:

i++: The value of i is used in the comparison, and then i is incremented.
--j: j is decremented first, and the decremented value is used in the comparison.

Iterations of the while Loop:
-----------------------------
1st iteration:
--------------
i = 0, j = 5.
Condition: 0 < 4 (since j is decremented to 4 and i is incremented after the comparison).
Result: true.
After the iteration: i = 1, j = 4.

2nd iteration:
--------------
i = 1, j = 4.
Condition: 1 < 3 (since j is decremented to 3 and i is incremented after the comparison).
Result: true.
After the iteration: i = 2, j = 3.

3rd iteration:
--------------
i = 2, j = 3.
Condition: 2 < 2 (since j is decremented to 2 and i is incremented after the comparison).
Result: false.
The loop exits.
Final values: i = 3, j = 2.
Q-1 :-
------

Q-11 :-
-------

Which is valid for while?
A) while (i = 0)
B) while (1)
C) while (0);
D) Both B and C

Answer: D) Both B and C
Explanation: while (1) is an infinite loop, and while (0); is valid but never runs the loop body.


Q-12 :-
-------

How many times will the loop run?
c
Copy code
#include <stdio.h>
int main() {
    int i = 0;
    for (; i < 10; ) {
        i++;
    }
    return 0;
}
A) 10
B) Infinite
C) Compilation Error
D) 0

Answer: A) 10
Explanation: The for loop lacks an increment statement but increments i manually within the body.


Q-13 :-
-------

What is the output?
-------------------
#include <stdio.h>
int main() {
    int i = 0;
    for (; ; ) {
        if (i++ == 2) break;
        printf("%d ", i);
    }
    return 0;
}

A) 1 2
B) 0 1 2
C) 1 2 3
D) Infinite

Answer: A) 1 2
-------
Explanation: The loop increments i in the condition. It prints 1 and 2 before breaking.

Q-14 :-
-------

What happens here?
--------------------
#include <stdio.h>
int main() {
    int i = 0;
    do {
        i++;
        printf("%d\n", i);
    } while (i < 5);
    return 0;
}

A) Prints 1 2 3 4 5
B) Prints 0 1 2 3 4
C) Infinite Loop
D) Compilation Error

Answer: A) Prints 1 2 3 4 5
-------
Explanation: The do-while loop executes the body first, then checks the condition. It runs 5 times, printing values from 1 to 5.

Q-15 :-
-------

What is the output of the following program?

c
Copy code
#include <stdio.h>
int main() {
    int x = 1;
    for (int i = 0; i < 4; i++) {
        x = x << 1;
    }
    printf("%d\n", x);
    return 0;
}
A) 2
B) 8
C) 16
D) 32

Answer :- C)16.

Explanation:
------------
Initialization:
---------------
x = 1 (binary: 0001).

For Loop:
---------
The loop runs 4 times (i = 0 to i = 3), shifting the bits of x one position to the left in each iteration.

This effectively multiplies x by 2 on each shift.

-> Iteration 1 (i = 0):

x = 1 << 1 → 2 (binary: 0010).

-> Iteration 2 (i = 1):

x = 2 << 1 → 4 (binary: 0100).

-> Iteration 3 (i = 2):

x = 4 << 1 → 8 (binary: 1000).

-> Iteration 4 (i = 3):

x = 8 << 1 → 16 (binary: 10000).

Output:
--------
After the loop ends, x = 16.
Correct Answer:
C) 16
