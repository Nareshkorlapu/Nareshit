|--------------|
| Program-1 :- | [ok]
|--------------|

Write a C program to search for a given element in an array and print its index. The program should prompt the user to input the element they want to search for.
If the element is found in the array, the program will print the index of the element. 
If the element is not found, the program will display a message indicating that the element is not present in the array.

Example 1:

Sample input :
Array: {3, 8, 4, 1, 9, 5, 9, 8, 9}
Element to search: 7
Sample output :
Element 7 not found in the array

-------------

Example 2 :

Sample input :
Array: {3, 8, 4, 1, 9, 5, 9, 8, 9}
Element to search: 9
Sample output :
Element 9 found at index 4

Sol:-
------------------------------------------------------------------------
// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int a[20],index,element,b;
    printf("Enter the size of array:");
    scanf("%d",&index);
    for(int i=0;i<index;i++){
        printf("Element at index %d:",i);
        scanf("%d,",&a[i]);
}
    printf("Element to search:");
    scanf("%d",&element);
    for(int i=0;i<index;i++){
        if(element==a[i]){
            printf("Element %d found at index %d",element,i);
            return 0;
        }
    }
    printf("Element %d not found in the array",element);

    return 0;
}
|--------------|
| Program-2 :- | [ok]
|--------------|

Write a C program to sort a given array in ascending order. 
The program should use the bubble sort algorithm to compare adjacent elements and swap them if they are in the wrong order.
After sorting, the program should print the original array and the sorted array.

Sample input : 
Array: {64, 25, 12, 22, 11}

Sample output :
Original array: 64 25 12 22 11 
Sorted array in ascending order: 11 12 22 25 64

Sol:-
---------------------
// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int arr[20],index,temp;
    printf("Enter the size of the array:");
    scanf("%d",&index);
    printf("Enter %d arrays: ",index);
    for(int i=0;i<index;i++){
        scanf("%d",&arr[i]); 
    }
    printf("Original array");
    for(int i=0;i<index;i++){
        printf("%3d",arr[i]);
    }
    for(int i=0;i<index-1;i++){
        for(int j=i+1;j<=index-1;j++){
            if(arr[i]>arr[j]){
                temp=arr[i];
                arr[i]=arr[j];
                arr[j]=temp;
            }
        }
    }
    printf("\n");
    printf("Sorted array in ascending order:");
    for(int i=0;i<index;i++){
        printf("%3d",arr[i]);
    }

    return 0;
}

|--------------|
| Program-3 :- | [ok]
|--------------|

Write a C program that finds and prints all pairs of numbers from a given array whose sum is equal to a specified target value. 
The program should iterate through the array, compare every pair of numbers, and print each pair that meets the condition.

Example:
Sample input:
Array: {1, 5, 7, -1, 5}
Target Sum: 6

Sample output:
Pair found: (1, 5)
Pair found: (7, -1)
Pair found: (1, 5)

Sol:-
----------------------------------------------------------
// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int arr[20],index,tar;
    printf("Enter the size of the array:");
    scanf("%d",&index);
    printf("Enter %d arrays: ",index);
    for(int i=0;i<index;i++){
        scanf("%d",&arr[i]);
    }
    printf("Target Sum:");
    scanf("%d",&tar);
    for(int i=0;i<index-1;i++){
        for(int j=i+1;j<=index-1;j++){
            if(arr[i]+arr[j]==tar){
                printf("Pair found:(%d,%d)\n",arr[i],arr[j]);
            }
        }
    }
    printf("\n");

    return 0;
}
|--------------|
| Program-4 :- | [ok]
|--------------|

Write a C program to find the minimum and maximum elements of a given array.

Sample input:
Array: {23, 45, 12, 78, 5, 89, 34}

Sample output :
Minimum element: 5
Maximum element: 89

Sol:-
------------------------------------------------
Sir:-
----------------------------------------------------
// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int n;
    printf("Enter the size of the array ");
    scanf("%d",&n);
    int a[n];
    for(int i = 0; i<n; i++){
        printf("Enter a val ");scanf("%d",&a[i]);
    }
    int min = a[0], max = a[0];
    for(int i = 0; i<n; i++){
        if(min > a[i]) min = a[i];
        if(max < a[i]) max = a[i];
    }
    printf("\nMin is %d ",min);
    printf("\nMax is %d ",max);
    return 0;
}

Danny:-
---------------------------------------------------
#include<stdio.h>
int main()
{
    int a[20],i,n,max,min;
    printf("Enter the Arry size: ");
    scanf("%d",&n);
    printf("Enter %d Arrys: ",n);
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
      if(a[i]<min) 
      {
          min=a[i];
      }
      if(a[i]>max)
      {
          max=a[i];
      }
    }
    printf("Minimum element: %d\n",min);
    printf("Maxmum element:Â %d",max);
}
|--------------|
| Program-5 :- | [ok]
|--------------|

Write a program in C to separate odd and even integers into separate arrays.

Sample input :
Input the number of elements to be stored in the array :5
Input 5 elements in the array :
element - 0 : 25
element - 1 : 47
element - 2 : 42
element - 3 : 56
element - 4 : 32

Sample output :
The Even array is : [42,56,32]
The Odd array is : [25,47]

Sol:-
----------------------------------------------------
#include<stdio.h>
int main()
{
    int a[20],i,n;
    printf("Enter the Arry size: ");
    scanf("%d",&n);
    printf("Enter %d Arrys: ",n);
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    printf("The Even array is :");
    for(i=0;i<n;i++)
    {
      if(a[i]%2==0) 
      {
         printf("%3d",a[i]);
      }
    }
    printf("\n");
    printf("The Odd array is : ");
    for(i=0;i<n;i++)
    {
      if(a[i]%2!=0) 
      {
         printf("%3d",a[i]);
          
      }
        
    }
}
