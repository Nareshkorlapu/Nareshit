                                    JOINS
                                 ==========



1.Write a query to display the employee names and their 
  department names from emp,dept tables.

SQL> SELECT ENAME,DNAME FROM EMP JOIN DEPT ON EMP.DEPTNO=DEPT.DEPTNO;


2.Write a query to display the employees details and department details 
  who are working in the location CHICAGO from emp,dept tables?

SQL> SELECT ENAME,DNAME FROM EMP JOIN DEPT ON EMP.DEPTNO=DEPT.DEPTNO WHERE L
OC='CHICAGO';

Note: If we want to filter the data after joining condition then we 
===== must use and operator in 8i joins.where as in 9i joins we are
      using either AND operator or WHERE clause also.



3.Write a query to display no of employees in each location from 
  emp,dept tables by using equi join?

SQL> SELECT LOC,COUNT(*) AS NO_OF_EMPLOYEES FROM EMP JOIN DEPT ON EMP.DEPTNO
=DEPT.DEPTNO GROUP BY LOC;

4.Write a query to display dname,sum(sal) from emp,dept
   tables by using equi join?

SQL> SELECT DNAME,SUM(SAL) FROM EMP JOIN DEPT ON EMP.DEPTNO=DEPT.DEPTNO GROU
P BY DNAME;

5.Write a query to display blake employee record along with dept details
   from emp,dept tables?

SQL> SELECT ENAME,HIREDATE,EMP.DEPTNO,LOC,SAL,DNAME FROM EMP JOIN DEPT ON EM
P.DEPTNO=DEPT.DEPTNO WHERE ENAME='Blake';

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
6.Check the following non equi join output
SQL>select * from test3;
 
      deptno
     ---------
        10
        20

SQL>select * from test4;
       
       deptno
     ---------
         10
         20
         30

SQL>select * from 
    test3 , test4
    where test3.deptno>test4.deptno;



NOTE:-in oracle when ever one table columns lies between another table
=====  two columns then also we are retriving data from those tables
      by using non equi join.

EG:-
===
SQL>select * from emp;
SQL>select * from salgrade;

SQL>select ename,sal,losal,hisal 
    from emp inner join salgrade
    on sal between losal and hisal;
              (OR)
SQL>select ename,sal,losal,hisal
    from emp inner join salgrade
    on sal>=losal and sal<=hisal;


